import cv2
cap = cv2.VideoCapture(0)
r,f = cap.read()
cv2.imwrite('test.jpg')
cv2.imwrite('test.jpg',f)
cap = cv2.VideoCapture(1)
cap = cv2.VideoCapture(0)
cap = cv2.VideoCapture(-1)
cap = cv2.VideoCapture(2)
cap = cv2.VideoCapture(3)
cap = cv2.VideoCapture(0)
cap = cv2.VideoCapture(0 + cvs.CAP_DSHOW)
cap = cv2.VideoCapture(0 + cv2.CAP_DSHOW)
r,f = cap.read()
cv2.imwrite('test.jpg',f)
    video = cv2.VideoCapture(0 + cv2.CAP_DSHOW)
    # video = cv2.VideoCapture(0)
    width = 2560
    high = 720
    mid = width // 2
    video.set(cv2.CAP_PROP_FRAME_WIDTH, width)
    video.set(cv2.CAP_PROP_FRAME_HEIGHT, high)
    w = video.get(cv2.CAP_PROP_FRAME_WIDTH)
    h = video.get(cv2.CAP_PROP_FRAME_HEIGHT)
    while True:
        ret, frame = video.read()
        cv2.imshow("img", frame)
        cv2.waitKey(10)
        left_img = frame[:, :mid]
        right_img = frame[:, mid:]
        cv2.imshow("left_img", left_img)
        cv2.imshow("right_img", right_img)
video = cv2.VideoCapture(0 + cv2.CAP_DSHOW)
width = 2560
high = 720
mid = width // 2
video.set(cv2.CAP_PROP_FRAME_WIDTH, width)
video.set(cv2.CAP_PROP_FRAME_HEIGHT, high)
w = video.get(cv2.CAP_PROP_FRAME_WIDTH)
h = video.get(cv2.CAP_PROP_FRAME_HEIGHT)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',rigth_img)
video = cv2.VideoCapture(0 + cv2.CAP_DSHOW)
width = 2560
high = 720
mid = width // 2
video.set(cv2.CAP_PROP_FRAME_WIDTH, width)
video.set(cv2.CAP_PROP_FRAME_HEIGHT, high)
w = video.get(cv2.CAP_PROP_FRAME_WIDTH)
h = video.get(cv2.CAP_PROP_FRAME_HEIGHT)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',rigth_img)
video = cv2.VideoCapture(0 + cv2.CAP_DSHOW)
width = 2560
high = 720
mid = width // 2
video.set(cv2.CAP_PROP_FRAME_WIDTH, width)
video.set(cv2.CAP_PROP_FRAME_HEIGHT, high)
print cv2.CAP_DSHOW
print(cv2.CAP_DSHOW)
video.getBackendName()
video = cv2.VideoCapture(0)
video.getBackendName()
width = 2560
high = 720
mid = width // 2
video.set(cv2.CAP_PROP_FRAME_WIDTH, width)
video.set(cv2.CAP_PROP_FRAME_HEIGHT, high)
video.get(cv2.CAP_PROP_FRAME_WIDTH)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',rigth_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
video.get(CAP_PROP_FPS)
video.get(cv2.CAP_PROP_FPS)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
video = cv2.VideoCapture(0)
width = 2560
high = 720
mid = width // 2
exit()
video = cv2.VideoCapture(0)
width = 2560
high = 720
mid = width // 2
exit()
import cv2
video = cv2.VideoCapture(0)
width = 2560
high = 720
mid = width // 2
video.set(cv2.CAP_PROP_FRAME_WIDTH, width)
video.set(cv2.CAP_PROP_FRAME_HEIGHT, high)
w = video.get(cv2.CAP_PROP_FRAME_WIDTH)
h = video.get(cv2.CAP_PROP_FRAME_HEIGHT)
ret, frame = video.read()
left_img = frame[:, :mid]
right_img = frame[:, mid:]
cv2.imwrite('test_all.jpg',frame)
cv2.imwrite('test_left.jpg',left_img)
cv2.imwrite('test_right.jpg',right_img)
exit()
from dronekit import connect
vehicle = connect('/dev/ttyACM0', wait_ready=True, baud=115200)
vehicle.mode='MANUAL'
vehicle.mode
print vehicle.mode
print(vehicle.mode)
vehicle.mode='MANUAL'
print(vehicle.mode)
vehicle.parameters['TARGET_MODE'] = 1
print(vehicle.mode)
vehicle.mode='MANUAL'
vehicle.mode='AUTO'
vehicle.mode='STEERING'
vehicle.parameters['TARGET_MODE'] = 2
vehicle.parameters['TARGET_MODE']
print(" Autopilot Firmware version: %s" % vehicle.version)
print(" Global Location: %s" % vehicle.location.global_frame)
print(" Attitude: %s" % vehicle.attitude)
print(" Heading: %s" % vehicle.heading)
vehicle.mode
print(vehicle.mode)
vehicle.parameters['MODE'] = 'MANUAL'
vehicle.parameters['MODE'] = 0
vehicle.mode='MANUAL'
vehicle.mode='LEARNING'
exit()
from dronekit import connect
vehicle = connect('/dev/ttyACM0', wait_ready=True, baud=115200)
print(vehicle.mode)
vehicle.mode='MANUAL'
print(vehicle.mode)
vehicle.mode='MANUAL'
print(vehicle.mode)
exit()
from dronekit import connect
vehicle = connect('/dev/ttyACM0', wait_ready=True, baud=115200, use_native=True)
exit
exit(9
exit()
cv2.imwrite('test_right.jpg',right_img)			
import readline; print('\n'.join([str(readline.get_history_item(i + 1)) for i in range(readline.get_current_history_length())]))
